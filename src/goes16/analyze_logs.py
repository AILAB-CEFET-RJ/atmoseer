# This script analyzes the logs generated by the GOES-16 feature extraction scripts.
# It summarizes warnings, errors, and exceptions found in the log files.
# The logs are expected to be in the "src/goes16/features" directory, and
# the script will parse each log file to extract relevant information.
import os
import re
from datetime import datetime

LOG_DIR = "src/goes16/features"
LOG_PATTERNS = {
    "warnings": re.compile(r"\[WARNING\] (.+)"),
    "errors": re.compile(r"\[ERROR\] (.+)"),
    "exceptions": re.compile(r"\[ERROR\] (.+?)(?=\n|$)")
}


def parse_log(file_path):
    summary = {"warnings": [], "errors": [], "exceptions": []}
    with open(file_path, encoding="utf-8") as f:
        content = f.read()
        for key, pattern in LOG_PATTERNS.items():
            summary[key] = pattern.findall(content)
    return summary


def summarize_logs():
    print("\nüìã An√°lise de logs de features GOES-16:\n")
    for file in sorted(os.listdir(LOG_DIR)):
        if not file.endswith(".log"):
            continue
        path = os.path.join(LOG_DIR, file)
        print(f"üîç {file}")
        result = parse_log(path)
        for kind in ["warnings", "errors", "exceptions"]:
            items = result[kind]
            if items:
                print(f"  {kind.capitalize()}: {len(items)} ocorr√™ncias. Ex: {items[0]}")
        print()

if __name__ == "__main__":
    summarize_logs()
